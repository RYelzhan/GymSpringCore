spring.application.name=Authentication

server.port=8095

# Database configuration
spring.datasource.url=jdbc:h2:mem:auth
spring.datasource.username=sa
spring.datasource.password=
spring.datasource.driverClassName=org.h2.Driver

# Database initialization
spring.sql.init.mode=always
spring.sql.init.data-locations=classpath:sql/data.sql
table-generator.initial-value=100

# Hibernate configuration
spring.jpa.show-sql=false
spring.jpa.generate-ddl=false
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.defer-datasource-initialization=true
spring.h2.console.enabled=true

logging.level.root=info

# Password Configuration
gym.api.profile.password.characters=ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789
gym.api.profile.password.length=11

# API Access configuration
allowed.prefixes=/login, /register, /h2-console
cors.allowed-origins=https://editor.swagger.io

# User Authentication Properties
authentication.starting-attempt=0
authentication.max-attempt=3
authentication.block-time-millis=300000

# Jwt configuration
security.jwt.signing.key = 3eba94ab16f8ff227194c330d497c245793612840389147bbea27e3b02d90897
security.jwt.expiration-time = 900000

# Eureka Server configuration
eureka.instance.prefer-ip-address=true

# Circuit Breaker Configuration
resilience4j.circuitbreaker.instances.restService.baseConfig=default
resilience4j.circuitbreaker.configs.default.registerHealthIndicator=true
resilience4j.circuitbreaker.configs.default.slidingWindowSize=1
resilience4j.circuitbreaker.configs.default.minimumNumberOfCalls=2
resilience4j.circuitbreaker.configs.default.failureRateThreshold=100
resilience4j.circuitbreaker.configs.default.permittedNumberOfCallsInHalfOpenState=3
resilience4j.circuitbreaker.configs.default.waitDurationInOpenState=5s
resilience4j.circuitbreaker.configs.default.automaticTransitionFromOpenToHalfOpenEnabled=true
resilience4j.circuitbreaker.configs.default.eventConsumerBufferSize=10

# Retry Configuration
resilience4j.retry.instances.peopleProxyRetry.baseConfig=default
resilience4j.retry.configs.default.max-attempts=2
resilience4j.retry.configs.default.wait-duration=1s
resilience4j.retry.configs.default.enableExponentialBackoff=true
resilience4j.retry.configs.default.exponentialBackoffMultiplier=2
resilience4j.retry.configs.default.retry-exceptions[0]=jakarta.ws.rs.InternalServerErrorException
resilience4j.retry.configs.default.retry-exceptions[1]=jakarta.ws.rs.ServiceUnavailableException
resilience4j.retry.configs.defauls.ignore-exceptions[0]=jakarta.ws.rs.BadRequestException
resilience4j.retry.configs.defauls.ignore-exceptions[1]=jakarta.ws.rs.NotFoundException

# ActiveMQ Artemis Configuration
spring.artemis.mode=native
spring.artemis.user=artemis
spring.artemis.password=artemis
spring.artemis.broker-url=tcp://localhost:61616

spring.artemis.pool.block-if-full=true
spring.artemis.pool.block-if-full-timeout=10s
spring.artemis.pool.enabled=false
spring.artemis.pool.max-connections=5
spring.artemis.pool.max-sessions-per-connection=100
spring.artemis.pool.idle-timeout=30s
spring.artemis.pool.time-between-expiration-check=60s
spring.artemis.pool.use-anonymous-producers=true

# Tracing configuration
management.tracing.sampling.probability=1.0
logging.pattern.level=%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]