{
  "openapi": "3.0.1",
  "info": {
    "title": "My Gym API",
    "description": "API for GYM management",
    "version": "2.1"
  },
  "servers": [
    {
      "url": "http://localhost:8080",
      "description": "Local Development Server"
    }
  ],
  "paths": {
    "/user/trainer/profiles": {
      "get": {
        "tags": [
          "trainer-controller"
        ],
        "summary": "Get Trainer Profile",
        "description": "Retrieves the profile of a trainer by authentication details.",
        "operationId": "getTrainerProfile",
        "responses": {
          "401": {
            "description": "Unauthorized access. Authentication failed due to invalid credentials or missing authorization header. Ensure the username/password are correct and the authorization header is provided.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TrainerSendDTO"
                }
              }
            }
          },
          "200": {
            "description": "Successful retrieval of the trainer's profile.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TrainerSendDTO"
                }
              }
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "trainer-controller"
        ],
        "summary": "Update Trainer Profile",
        "description": "Update Trainer Profile with trainer given input.",
        "operationId": "updateTrainerProfile",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TrainerUpdateDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Profile updated successfully.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TrainerSendDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access. Authentication failed due to invalid credentials or missing authorization header. Ensure the username/password are correct and the authorization header is provided.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TrainerSendDTO"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data. This error occurs when the input does not meet the validation criteria. Check the field-level errors for more details.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TrainerSendDTO"
                }
              }
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "trainer-controller"
        ],
        "summary": "Delete Trainee Profile",
        "description": "Deletes the trainer profile of the authenticated trainer.",
        "operationId": "deleteTrainer",
        "responses": {
          "200": {
            "description": "Successfully deleted the trainer profile."
          },
          "401": {
            "description": "Unauthorized access. Authentication failed due to invalid credentials or missing authorization header. Ensure the username/password are correct and the authorization header is provided."
          },
          "204": {
            "description": "No Content"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/user/trainee/trainers/add": {
      "put": {
        "tags": [
          "trainee-controller"
        ],
        "summary": "Update Trainer List for a Trainee",
        "description": "Adds specified trainers to the trainee's profile.",
        "operationId": "updateTrainerList",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TraineeTrainersUpdateDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully updated the trainer list.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TrainerBasicDTO"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access. Authentication failed due to invalid credentials or missing authorization header. Ensure the username/password are correct and the authorization header is provided.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TrainerBasicDTO"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data. This error occurs when the input does not meet the validation criteria. Check the field-level errors for more details.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TrainerBasicDTO"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/user/trainee/profiles": {
      "get": {
        "tags": [
          "trainee-controller"
        ],
        "summary": "Get Trainee Profile",
        "description": "Retrieves the profile of a trainee by authentication details.",
        "operationId": "getTraineeProfile",
        "responses": {
          "200": {
            "description": "Successful retrieval of the trainee's profile.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TraineeSendDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access. Authentication failed due to invalid credentials or missing authorization header. Ensure the username/password are correct and the authorization header is provided.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TraineeSendDTO"
                }
              }
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "trainee-controller"
        ],
        "summary": "Update Trainee Profile",
        "description": "Updates the profile of a trainee.",
        "operationId": "updateTraineeProfile",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TraineeUpdateDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully updated the trainee profile.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TraineeSendDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access. Authentication failed due to invalid credentials or missing authorization header. Ensure the username/password are correct and the authorization header is provided.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TraineeSendDTO"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data. This error occurs when the input does not meet the validation criteria. Check the field-level errors for more details.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TraineeSendDTO"
                }
              }
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "trainee-controller"
        ],
        "summary": "Delete Trainee Profile",
        "description": "Deletes the trainee profile of the authenticated trainee.",
        "operationId": "deleteTrainee",
        "responses": {
          "200": {
            "description": "Successfully deleted the trainee profile."
          },
          "401": {
            "description": "Unauthorized access. Authentication failed due to invalid credentials or missing authorization header. Ensure the username/password are correct and the authorization header is provided."
          },
          "204": {
            "description": "No Content"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/user/change/password": {
      "put": {
        "tags": [
          "user-controller"
        ],
        "summary": "Change User Password",
        "operationId": "changeUserPassword",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdateDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Password changed successfully.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access. Authentication failed due to invalid credentials or missing authorization header. Ensure the username/password are correct and the authorization header is provided.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data. This error occurs when the input does not meet the validation criteria. Check the field-level errors for more details.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/user/trainer/trainings": {
      "post": {
        "tags": [
          "trainer-controller"
        ],
        "summary": "Creates training for trainer",
        "description": "Creates training with trainer specific input data.",
        "operationId": "createTraineeTraining",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TrainerTrainingCreateDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully created new training.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access. Authentication failed due to invalid credentials or missing authorization header. Ensure the username/password are correct and the authorization header is provided.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data. This error occurs when the input does not meet the validation criteria. Check the field-level errors for more details.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/user/trainee/trainings": {
      "post": {
        "tags": [
          "trainee-controller"
        ],
        "summary": "Creates training for trainee",
        "description": "Creates training with trainee specific input data.",
        "operationId": "createTraineeTraining_1",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TraineeTrainingCreateDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully created new training.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access. Authentication failed due to invalid credentials or missing authorization header. Ensure the username/password are correct and the authorization header is provided.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data. This error occurs when the input does not meet the validation criteria. Check the field-level errors for more details.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/authenticate/register/trainer": {
      "post": {
        "tags": [
          "authentication-controller"
        ],
        "summary": "Register a new trainer",
        "description": "Registers a new trainer and returns their username and password.",
        "operationId": "registerTrainer",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TrainerRegistrationDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Registration successful",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/UserAuthenticatedDTO"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data. This error occurs when the input does not meet the validation criteria. Check the field-level errors for more details.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/UserAuthenticatedDTO"
                }
              }
            }
          }
        }
      }
    },
    "/authenticate/register/trainee": {
      "post": {
        "tags": [
          "authentication-controller"
        ],
        "summary": "Register a new trainee",
        "description": "Registers a new trainee and returns their username and password.",
        "operationId": "registerTrainee",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TraineeRegistrationDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Registration successful",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/UserAuthenticatedDTO"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data. This error occurs when the input does not meet the validation criteria. Check the field-level errors for more details.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/UserAuthenticatedDTO"
                }
              }
            }
          }
        }
      }
    },
    "/authenticate/login": {
      "post": {
        "tags": [
          "authentication-controller"
        ],
        "summary": "User Login",
        "description": "Authenticates a user based on the username and password.",
        "operationId": "login",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserLoginDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data. This error occurs when the input does not meet the validation criteria. Check the field-level errors for more details.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/user/change/active": {
      "patch": {
        "tags": [
          "user-controller"
        ],
        "summary": "Activate or Deactivate User",
        "operationId": "activateDeactivateUser",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserActivationDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "User activation status updated successfully.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access. Authentication failed due to invalid credentials or missing authorization header. Ensure the username/password are correct and the authorization header is provided.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data. This error occurs when the input does not meet the validation criteria. Check the field-level errors for more details.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/user/trainer/trainings/filter": {
      "get": {
        "tags": [
          "trainer-controller"
        ],
        "summary": "Get Trainer Trainings List",
        "operationId": "getTrainerTrainingsList",
        "parameters": [
          {
            "name": "trainerTrainingDTO",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/TrainerTrainingDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved list of trainings.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TrainingBasicDTO"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access. Authentication failed due to invalid credentials or missing authorization header. Ensure the username/password are correct and the authorization header is provided.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TrainingBasicDTO"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data. This error occurs when the input does not meet the validation criteria. Check the field-level errors for more details.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TrainingBasicDTO"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/user/trainee/trainings/filter": {
      "get": {
        "tags": [
          "trainee-controller"
        ],
        "summary": "Retrieve a list of trainings with filter",
        "description": "Retrieve a list of trainings for a specific trainee based on filter criteria.",
        "operationId": "getTraineeTrainingsList",
        "parameters": [
          {
            "name": "traineeTrainingDTO",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/TraineeTrainingDTO"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized access. Authentication failed due to invalid credentials or missing authorization header. Ensure the username/password are correct and the authorization header is provided.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TrainingBasicDTO"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data. This error occurs when the input does not meet the validation criteria. Check the field-level errors for more details.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TrainingBasicDTO"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/user/trainee/trainers/available": {
      "get": {
        "tags": [
          "trainee-controller"
        ],
        "summary": "Get Available Trainers for a Trainee",
        "description": "Retrieves a list of trainers that are not assigned to the specified trainee.",
        "operationId": "getNotAssignedTrainers",
        "responses": {
          "200": {
            "description": "Successfully retrieved the list of available trainers.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TrainerBasicDTO"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access. Authentication failed due to invalid credentials or missing authorization header. Ensure the username/password are correct and the authorization header is provided.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TrainerBasicDTO"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/user/info": {
      "get": {
        "tags": [
          "user-controller"
        ],
        "summary": "Return User username",
        "description": "First ever endpoint.",
        "operationId": "getUserInfo",
        "responses": {
          "200": {
            "description": "Returns authenticated user's username.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access. Authentication failed due to invalid credentials or missing authorization header. Ensure the username/password are correct and the authorization header is provided.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/training/types": {
      "get": {
        "tags": [
          "training-controller"
        ],
        "summary": "Get Training Types",
        "operationId": "getTrainingTypes",
        "responses": {
          "401": {
            "description": "Unauthorized access. Authentication failed due to invalid credentials or missing authorization header. Ensure the username/password are correct and the authorization header is provided.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TrainingTypeBasicDTO"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Successfully retrieved list of training types.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TrainingTypeBasicDTO"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "TrainerUpdateDTO": {
        "required": [
          "firstName",
          "isActive",
          "lastName",
          "trainingType"
        ],
        "type": "object",
        "properties": {
          "firstName": {
            "maxLength": 25,
            "minLength": 2,
            "type": "string"
          },
          "lastName": {
            "maxLength": 25,
            "minLength": 2,
            "type": "string"
          },
          "trainingType": {
            "maxLength": 20,
            "minLength": 2,
            "type": "string"
          },
          "isActive": {
            "type": "boolean"
          }
        }
      },
      "TraineeBasicDTO": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string"
          },
          "firstname": {
            "type": "string"
          },
          "lastname": {
            "type": "string"
          }
        }
      },
      "TrainerSendDTO": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "trainingType": {
            "type": "string"
          },
          "isActive": {
            "type": "boolean"
          },
          "traineeAssigned": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TraineeBasicDTO"
            }
          }
        }
      },
      "TraineeTrainersUpdateDTO": {
        "required": [
          "trainerUsernames"
        ],
        "type": "object",
        "properties": {
          "trainerUsernames": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "TrainerBasicDTO": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "trainingType": {
            "type": "string"
          }
        }
      },
      "TraineeUpdateDTO": {
        "required": [
          "firstName",
          "isActive",
          "lastName"
        ],
        "type": "object",
        "properties": {
          "firstName": {
            "maxLength": 25,
            "minLength": 2,
            "type": "string"
          },
          "lastName": {
            "maxLength": 25,
            "minLength": 2,
            "type": "string"
          },
          "dateOfBirth": {
            "type": "string",
            "format": "date-time"
          },
          "address": {
            "maxLength": 50,
            "minLength": 5,
            "type": "string"
          },
          "isActive": {
            "type": "boolean"
          }
        }
      },
      "TraineeSendDTO": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "dateOfBirth": {
            "type": "string",
            "format": "date-time"
          },
          "address": {
            "type": "string"
          },
          "isActive": {
            "type": "boolean"
          },
          "trainersAssigned": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TrainerBasicDTO"
            }
          }
        }
      },
      "UserUpdateDTO": {
        "required": [
          "newPassword"
        ],
        "type": "object",
        "properties": {
          "newPassword": {
            "maxLength": 10,
            "minLength": 10,
            "type": "string"
          }
        }
      },
      "TrainerTrainingCreateDTO": {
        "required": [
          "date",
          "traineeUsername",
          "trainingDuration",
          "trainingName"
        ],
        "type": "object",
        "properties": {
          "traineeUsername": {
            "maxLength": 25,
            "minLength": 2,
            "type": "string"
          },
          "trainingName": {
            "maxLength": 25,
            "minLength": 2,
            "type": "string"
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "trainingDuration": {
            "maximum": 360,
            "minimum": 10,
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "TraineeTrainingCreateDTO": {
        "required": [
          "date",
          "trainerUsername",
          "trainingDuration",
          "trainingName"
        ],
        "type": "object",
        "properties": {
          "trainerUsername": {
            "maxLength": 25,
            "minLength": 2,
            "type": "string"
          },
          "trainingName": {
            "maxLength": 25,
            "minLength": 2,
            "type": "string"
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "trainingDuration": {
            "maximum": 360,
            "minimum": 10,
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "TrainerRegistrationDTO": {
        "required": [
          "firstName",
          "lastName",
          "trainingType"
        ],
        "type": "object",
        "properties": {
          "firstName": {
            "maxLength": 50,
            "minLength": 2,
            "type": "string"
          },
          "lastName": {
            "maxLength": 50,
            "minLength": 2,
            "type": "string"
          },
          "trainingType": {
            "maxLength": 20,
            "minLength": 2,
            "type": "string"
          }
        }
      },
      "UserAuthenticatedDTO": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "TraineeRegistrationDTO": {
        "required": [
          "firstName",
          "lastName"
        ],
        "type": "object",
        "properties": {
          "firstName": {
            "maxLength": 25,
            "minLength": 2,
            "type": "string"
          },
          "lastName": {
            "maxLength": 25,
            "minLength": 2,
            "type": "string"
          },
          "dateOfBirth": {
            "type": "string",
            "format": "date-time"
          },
          "address": {
            "maxLength": 50,
            "minLength": 5,
            "type": "string"
          }
        }
      },
      "UserLoginDTO": {
        "required": [
          "password",
          "username"
        ],
        "type": "object",
        "properties": {
          "username": {
            "maxLength": 50,
            "minLength": 2,
            "type": "string"
          },
          "password": {
            "maxLength": 10,
            "minLength": 10,
            "type": "string"
          }
        }
      },
      "UserActivationDTO": {
        "required": [
          "isActive"
        ],
        "type": "object",
        "properties": {
          "isActive": {
            "type": "boolean"
          }
        }
      },
      "TrainerTrainingDTO": {
        "type": "object",
        "properties": {
          "dateFrom": {
            "type": "string",
            "format": "date-time"
          },
          "dateTo": {
            "type": "string",
            "format": "date-time"
          },
          "traineeName": {
            "maxLength": 50,
            "minLength": 2,
            "type": "string"
          }
        }
      },
      "TrainingBasicDTO": {
        "type": "object",
        "properties": {
          "trainingName": {
            "type": "string"
          },
          "trainingDate": {
            "type": "string",
            "format": "date-time"
          },
          "trainingType": {
            "type": "string"
          },
          "trainingDuration": {
            "type": "integer",
            "format": "int32"
          },
          "partnerName": {
            "type": "string"
          }
        }
      },
      "TraineeTrainingDTO": {
        "type": "object",
        "properties": {
          "dateFrom": {
            "type": "string",
            "format": "date-time"
          },
          "dateTo": {
            "type": "string",
            "format": "date-time"
          },
          "trainerName": {
            "maxLength": 50,
            "minLength": 2,
            "type": "string"
          },
          "trainingType": {
            "maxLength": 20,
            "minLength": 2,
            "type": "string"
          }
        }
      },
      "TrainingTypeBasicDTO": {
        "type": "object",
        "properties": {
          "trainingType": {
            "type": "string"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          }
        }
      }
    },
    "securitySchemes": {
      "basicAuth": {
        "type": "http",
        "scheme": "basic"
      }
    }
  }
}